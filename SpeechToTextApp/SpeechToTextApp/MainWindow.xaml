<Window x:Class="SpeechToTextApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpeechToTextApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" Width="1000"
        Icon="/icons/main.ico"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#21262d"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="#21262d" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#21262d" Offset="0.0"/>
            <GradientStop Color="#21262d" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#c9d1d9"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="#21262d"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#0d1123" Offset="0.0"/>
            <GradientStop Color="#0d1123" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#317ac9"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#0d1123"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#317ac9"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#21262d" Offset="0.0"/>
            <GradientStop Color="#21262d" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#21262d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#21262d" Offset="0.0"/>
            <GradientStop Color="#21262d" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#21262d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#21262d" Offset="0.0"/>
            <GradientStop Color="#21262d" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="#21262d"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="#21262d" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#21262d"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="#c9d1d9"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#21262d"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#21262d"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21262d"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#21262d"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#21262d"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="#21262d" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="#21262d" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#21262d"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#21262d"/>
            <Setter Property="BorderBrush" Value="#21262d"/>
            <Setter Property="Foreground" Value="#21262d"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#323840" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#181D25" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#21262d"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#21262d"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!--StopButtonStyle-->

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0d1123"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#317ac9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#02040a"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#317ac9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>

        <!--TextBoxStyle-->

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#30363d"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#30363d"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#30363d"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="ScrollViewer.Background" Value="#0d1118"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"  Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10" BorderBrush="#30363d" BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="#0d1118">
        <TextBox Style="{DynamicResource TextBoxStyle1}" x:Name="textBox" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                 TextWrapping="Wrap" IsReadOnly="True" Margin="10,87,57,10" FontFamily="Consolas"
                 Foreground="#c9d1d9" Background="#0d1118" TextOptions.TextFormattingMode="Display"
                 Padding="7"/>

        <Button Style="{DynamicResource ButtonStyle1}" x:Name="startButton" Content="Start" Click="OnStartButtonClick" Margin="10,48,0,0" HorizontalAlignment="Left" Width="110" Height="34" VerticalAlignment="Top" FontSize="18" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d"/>
        <Button Style="{DynamicResource ButtonStyle1}" x:Name="stopButton" Content="Stop" Click="OnStopButtonClick" Margin="125,48,0,0" HorizontalAlignment="Left" Width="110" Height="34" VerticalAlignment="Top" IsEnabled="False" FontSize="18" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d"/>

        <Button x:Name="clearButton" Click="OnClearButtonClick" Margin="10,10,0,0" VerticalAlignment="Top" Height="34" HorizontalAlignment="Left" Width="34" Background="#21262d" BorderBrush="#30363d">
            <Image Source="/icons/binWhite.png" Height="30" Width="20" />
        </Button>

        <ComboBox Style="{DynamicResource ComboBoxStyle1}" x:Name="languageComboBox" HorizontalAlignment="Left" Margin="505,48,0,0" VerticalAlignment="Top" Width="120" SelectedIndex="0" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d">
            <ComboBoxItem Content="English (en-US)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Russian (ru-RU)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Ukrainian (uk-UA)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="French (fr-FR)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="German (de-DE)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Spanish (es-ES)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Polish (pl-PL)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Italian (it-IT)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Portuguese (pt-PT)" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Japanese (ja-JP)" Background="#21262d" BorderBrush="#30363d"/>
        </ComboBox>

        <ComboBox Style="{DynamicResource ComboBoxStyle1}" x:Name="fontFamilyComboBox" HorizontalAlignment="Left" Margin="760,48,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="OnFontFamilySelectionChanged" SelectedIndex="0" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d">
            <ComboBoxItem Content="Arial" FontFamily="Arial" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Courier New" FontFamily="Courier New" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Times New Roman" FontFamily="Times New Roman" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Verdana" FontFamily="Verdana" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Tahoma" FontFamily="Tahoma" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="Georgia" FontFamily="Georgia" Background="#21262d" BorderBrush="#30363d"/>
        </ComboBox>

        <ComboBox Style="{DynamicResource ComboBoxStyle1}" x:Name="fontSizeComboBox" HorizontalAlignment="Left" Margin="700,48,0,0" VerticalAlignment="Top" Width="55" Height="30" SelectionChanged="OnFontSizeSelectionChanged" SelectedIndex="3" FontSize="17" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d">
            <ComboBoxItem Content="8" Background="#21262d" Cursor="AppStarting" BorderBrush="#FFC9D1D9">

            </ComboBoxItem>
            <ComboBoxItem Content="10" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="12" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="14" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="16" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="18" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="20" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="22" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="24" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="26" Background="#21262d" BorderBrush="#30363d"/>
            <ComboBoxItem Content="28" Background="#21262d" BorderBrush="#30363d"/>
        </ComboBox>

        <Button x:Name="decreaseFontSizeButton" Click="OnDecreaseFontSizeClick" Margin="630,48,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Height="30" Background="#21262d" BorderBrush="#30363d">
            <Image Source="/icons/font-down-white.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality"/>
        </Button>

        <Button x:Name="increaseFontSizeButton" FontSize="19" Click="OnIncreaseFontSizeClick" Margin="665,48,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Height="30" Background="#21262d" BorderBrush="#30363d">
            <Image Source="/icons/font-up-white.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality"/>
        </Button>

        <Button x:Name="exportButton" Click="OnExportButtonClick" Margin="49,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"  Width="34" Height="34" Background="#21262d" BorderBrush="#30363d">
            <Image Source="/icons/export-white.png" Height="30" Width="20"  />
        </Button>

        <Label Margin="88,14,0,0" Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="102" Foreground="#c9d1d9">Export to .docx</Label>

        <ComboBox Style="{DynamicResource ComboBoxStyle1}" x:Name="audioDeviceComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="240,48,0,0" Width="260" Height="34" RenderTransformOrigin="0.5,0.5" FontSize="15" Foreground="#c9d1d9" Background="#21262d" BorderBrush="#30363d">
            <ComboBox.RenderTransform >
                <TransformGroup>
                    <ScaleTransform ScaleY="1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </ComboBox.RenderTransform>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="#21262d" />
                    <Setter Property="BorderBrush" Value="#30363d" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#02040a" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#0d1123"/>
                            <Setter Property="BorderBrush"  Value="#317ac9"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
    </Grid>
</Window>